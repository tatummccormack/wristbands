register.html AJAX later
<script>
        document.getElementById('createAccountForm').addEventListener('submit', function(event) {
            event.preventDefault();
            
            var formData = {
                fname: document.getElementById('fname').value,
                lname: document.getElementById('lname').value,
                username: document.getElementById('username').value,
                email: document.getElementById('email').value,
                password: document.getElementById('password').value
            };
            
            
            fetch('/create_account', {
                method: 'POST',
                body: JSON.stringify(formData),
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => response.json())
            .then(data => {
                alert(data.message);
                window.location.href = '/login'; 
            })
            .catch(error => {
                console.error('Error:', error);
            });
        });
    </script>


back in profile - jinja
<p><strong></strong> {{ user.bio }}</p>
    <p><strong>Followers </strong> {{ user.follower_count }}</p>
    <p><strong>Following </strong> {{ user.following_count }}</p>
    <p><strong>Festivals </strong> {{ user.festival_following_count }}</p>


Twitter API 
class Relationship(Model):
    @classmethod
    def parse(cls, api, json):
        result = cls(api)
        for k, v in json.items():
            if k == 'connections':
                setattr(result, 'is_following', 'following' in v)
                setattr(result, 'is_followed_by', 'followed_by' in v)
                setattr(result, 'is_muted', 'muting' in v)
                setattr(result, 'is_blocked', 'blocking' in v)
                setattr(result, 'is_following_requested', 'following_requested' in v)
                setattr(result, 'no_relationship', 'none' in v)
            else:
                setattr(result, k, v)
        return result


PROFILE 

        <!-- <p class="follower-count">Followers: {{ user.followers }}</p>

        <p class="following-count">Following: {{ user.following }}</p>

        <div class="posts" id="posts">
            <h2>Posts</h2>
        </div>

        <!-- <img src="profile_picture.jpg" alt="Profile Picture" class="profile-picture"> -->

        <!-- <form action="{{ url_for('update_bio', user_id=user.id) }}" method="POST">
        <textarea name="bio" rows="4" cols="50">{{ user.bio }}</textarea><br>
        <input type="submit" value="Update Bio">
    </form> -->


    # @app.route('/posts', methods=['POST'])
# def create_post():
#     data = request.get_json()
#     data['likes'] = 0  # Initialize likes count to 0
#     posts.append(data)  # Assuming data contains post content and user information
#     return jsonify(data), 201

# @app.route('/posts/<int:post_id>/like', methods=['POST'])
# def like_post(post_id):
#     for post in posts:
#         if post.get('id') == post_id:
#             post['likes'] += 1
#             return jsonify(post)
#     return jsonify({'error': 'Post not found'}), 404




<!-- <style>
    
    /* The Modal (background) */
    .modal {
      display: none; /* Hidden by default */
      position: fixed; /* Stay in place */
      z-index: 1; /* Sit on top */
      padding-top: 100px; /* Location of the box */
      left: 0;
      top: 0;
      width: 100%; /* Full width */
      height: 100%; /* Full height */
      overflow: auto; /* Enable scroll if needed */
      background-color: rgb(0,0,0); /* Fallback color */
      background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    }
    
    /* Modal Content */
    .modal-content {
      background-color: #fefefe;
      margin: auto;
      padding: 20px;
      border: 1px solid #888;
      width: 80%;
    }
    
    /* The Close Button */
    .close {
      color: #aaaaaa;
      float: right;
      font-size: 28px;
      font-weight: bold;
    }
    
    .close:hover,
    .close:focus {
      color: #000;
      text-decoration: none;
      cursor: pointer;
    }
    </style>